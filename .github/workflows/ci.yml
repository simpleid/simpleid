name: Continuous integration tests

on:
  push:
    paths:
      - '**.php'
      - 'composer.json'
      - 'phpstan.*'
      - 'phpunit.*'
  pull_request:
    paths:
      - '**.php'
      - 'composer.json'
      - 'phpstan.*'
      - 'phpunit.*'

jobs:
  phpunit:
    name: Unit tests (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions:
          - 8.0
          - 8.1
          - 8.2
          - 8.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: openssl, hash, gmp, xml
          tools: composer

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "php${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php${{ matrix.php-versions }}-composer-"

      - name: Install Composer dependencies
        run: composer update && composer install

      - name: Run tests
        run: composer test

  stan:
    name: PHP static analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: openssl, hash, gmp, xml
          tools: composer

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "phpstan-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "phpstan-composer-"

      - name: Install dependencies
        run: composer update && composer install

      - name: Perform static analysis
        run: composer phpstan
