<?php
/*
 * SimpleID configuration file.
 */

return [
    /*
     * Base URL.
     *
     * This is the URL of the location you want to place your SimpleID
     * distribution.  It becomes the URL of the SimpleID server.
     *
     * Examples:
     *
     * http://www.example.com
     * http://www.example.com:8888
     * http://www.example.com/simpleid
     * https://www.example.com:8888/simpleid
     *
     */
    'canonical_base_path' => 'http://www.example.com',

    /*
     * Directory to store identity information.
     *
     * This directory must exist and be readable by the web server.
     *
     * For maximum security, it is highly recommended to place this
     * directory outside your web browser's document root directory, so
     * that it is not visible to user agents.
     *
     */
    'identities_dir' => '@@IDENTITIES_DIR@@',

    /*
     * Location to store temporary files.
     *
     * This directory must exist and be readable by the web server.
     *
     * Depending on your system's security policies, you can use the
     * system temporary directory (/tmp), or another directory.
     */
    'temp_dir' => '/tmp',

    /*
     * Location to store cache data.
     *
     * For filesystem based cache, use folder=<cache_directory>
     * This directory must exist and be readable and writable by the
     * web server.
     *
     * For maximum security, it is highly recommended to place this
     * directory outside your web browser's document root directory, so
     * that it is not visible to user agents.
     *
     * Other cache systems, such as memchache or redis, can also be used.
     * For more details on how to configure these systems, see
     * http://fatfreeframework.com/quick-reference#CACHE and
     * http://fatfreeframework.com/cache
     */
    'cache' => 'folder=@@CACHE_DIR@@',

    /*
     * Directory to store persistent data.  This configuration is used
     * if the default store module (SimpleID\Store\DefaultStoreModule),
     * or its derivatives, is enabled
     *
     * This directory must exist and be readable and writable by the
     * web server.
     *
     * For maximum security, it is highly recommended to place this
     * directory outside your web browser's document root directory, so
     * that it is not visible to user agents.
     *
     * Other storage systems may also be used if the required module is
     * enabled.
     *
     */
    'store_dir' => '@@STORE_DIR@@',

    /*
     * Secret used to encrypt sensitive strings (such as token
     * generation keys) that are stored locally. This should be a
     * random string of at least 64 characters.
     *
     * The secret can be specified in the 'secure_secret' configuration here.
     * Alternatively it can be set via the SIMPLEID_SECURE_SECRET environment
     * variable (which will take precedence).
     *
     * Alternatively, instead of defining secure_secret, the secure_secret_file
     * configuration (or the SIMPLEID_SECURE_SECRET_FILE environment variable)
     * can be set to read the secret from the specified file.
     *
     * This secret is VERY IMPORTANT. If you lose it, data encrypted by it
     * cannot be decrypted anymore.
     */
    'secure_secret' => '',
    //'secure_secret_file' => '',

    /*
     * JSON Web Key Set files.  These contain the public and private keys
     * used for JSON web tokens.  These are mandatory if you want to
     * use OpenID Connect.
     *
     * See http://simpleid.org/docs/2/installing/ *keys on how
     * to create a key pair and convert them to JSON Web Key Set format.
     *
     */
    'public_jwks_file' => '@@ETC_DIR@@/public_jwks.json',
    'private_jwks_file' => '@@ETC_DIR@@/private_jwks.json',

    /*
     * Allows use of unencrypted connections.
     *
     * SimpleID and the protocols it implements generally mandate the use of HTTPS
     * for all connections.  However, for debug purposes, it may be necessary to allow
     * unencrypted connections to SimpleID.
     *
     * It is strongly recommended that this is set to false.  Setting this to true
     * will allow passwords to be sent as plaintext.  You should not change this
     * value unless it is absolutely necessary.
     *
     */
    'allow_plaintext' => false,

    /*
     * Performs additional verification of relying party return URLs.
     *
     * When authenticating using OpenID version 2, SimpleID can perform additional
     * verification of the relying party's return URLs under section 9.2.1 of the
     * OpenID specification.
     *
     * The default is set to true for security reasons.  However, if your web server
     * is blocked by your web hosting provider's firewall from accessing outside
     * servers, then set this to false.
     *
     */
    'openid_verify_return_url' => true,

    /* Performs strict verification of realm URLs against return URLs.
     *
     * Under the OpenID specifications, where a realm is specified, it must
     * match the return URL.  However, in some instances, the realm is specified
     * using a http scheme, whereas the return URL is specified using a https
     * scheme, which would fail this verification process.  Setting this option
     * to true will allow for some leniency in this check, allowing for a
     * http/https mismatch.
     *
     * The default is set to true for security reasons.  However, for some
     * misconfigured relying parties, this may need to be set to false.
     */
    'openid_strict_realm_check' => true,


    /*
     * Allowable origins for WebFinger queries.
     *
     * This specifies the origins allowed to access the WebFinger service included
     * with SimpleID.  WebFinger is required for OpenID Connect to function.
     */
    'webfinger_access_control_allow_origin' => '*',

    /*
     * The title of the site (optional).
     *
     * This is displayed in the header. If not set, the default title 'SimpleID' is
     * shown.
     */
    //'site_title' => 'Example',

    /*
     * The locale for the SimpleID user interface.
     *
     */
    'locale' => 'en',

    /*
     * Date and time format.
     *
     * The date and time format specified using the date_format() syntax.
     *
     * See https://www.php.net/manual/en/datetime.format.php for details.
     * 
     */
    'date_time_format' => 'Y-m-d H:i:s T',

    /*
     * Authentication context class reference.
     *
     * Specify the reference to the *minimum* authentication context class
     * with which your SimpleID server complies.  Note that authentication
     * scheme modules may replace this with a higher authentication context class.
     *
     * Examples:
     * 1
     * 'http://id.incommon.org/assurance/bronze'
     */
    'acr' => 1,

    /*
     * The logger class.
     *
     * You can use any PSR-3 compliant logger, as long as it has been loaded.
     *
     * The default logger class writes log entries to the file system,
     * as specified in the log_file variable.
     *
     * To disable logging altogether, use Psr\Log\NullLogger
     */
    'logger' => 'SimpleID\\Util\\DefaultLogger',

    /*
     * Log file for default logger.
     *
     * You can specify a file into which the SimpleID default logger will log
     * various diagnostic messages.
     *
     * The log file's directory must exist and must be writable by the web server.
     */
    'log_file' => '../log/simpleid.log',

    /*
     * The level of detail for log messages.
     *
     * You can determine which messages are captured in the log file by specifying
     * the minimum log level: emergency, alert, critical, error, warning, notice
     * info, debug
     *
     * WARNING: Setting the log level to debug will result in security sensitive
     * information also being logged.
     *
     * This has effect only if logging is enabled.
     */
    'log_level' => 'warning',

    /*
     * Whether to use a geolocation service to log the location of auditable
     * events.
     *
     * If enabled, this uses the `geoip` PECL extension to query an installed
     * GeoIP database.  If the PECL extension is not installed, this uses a web
     * service to query the location information, which may negatively affect
     * performance.
     *
     * @see http://fatfreeframework.com/3.8/geo#location
     * @see https://www.php.net/manual/en/ref.geoip.php
     */
    'log_location' => false,

    /*
     * Debugging mode.
     *
     * Setting this to a number greater than `0` enables debugging mode. In debugging
     * mode, Tracy (https://tracy.nette.org/) is enabled to provide debugging
     * information directly to the browser.
     *
     * In addition, error reporting from the Fat-Free Framework is
     * more detailed, with the level of detail corresponding to the value
     * of this variable.  For further details of the accepted values, see
     * https://fatfreeframework.com/3.8/quick-reference#DEBUG
     *
     * Only the default value of `0` should be used on production servers.
     */
    'debug' => 0,

    /*
     * The SimpleID modules to be enabled.
     *
     * You can customise SimpleID's functionality by including and excluding
     * modules in this array.
     */
    'modules' => [
        // User-accessible user interface
        'SimpleID\\Base\\MyModule',

        // User authentication schemes
        'SimpleID\\Auth\\PasswordAuthSchemeModule',
        'SimpleID\\Auth\\RememberMeAuthSchemeModule',
        'SimpleID\\Auth\\OTPAuthSchemeModule',

        // OpenID 1.x and 2.x
        'SimpleID\\Protocols\\OpenID\\OpenIDModule',
        'SimpleID\\Protocols\\OpenID\\Extensions\\SRegOpenIDExtensionModule',
        'SimpleID\\Protocols\\OpenID\\Extensions\\PAPEOpenIDExtensionModule',

        // WebFinger (required by OpenID Connect)
        'SimpleID\\Protocols\\WebFinger\\WebFingerModule',

        // OpenID Connect
        'SimpleID\\Protocols\\Connect\\ConnectModule',
        'SimpleID\\Protocols\\Connect\\ConnectClientRegistrationModule',
        
    ]
];
?>
