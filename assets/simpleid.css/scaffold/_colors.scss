@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';

// Default colour scheme is from 'Flat UI'
// https://materialui.co/flatuicolors/
$color-scheme: (
  'turquoise': #1ABC9C,
  'emerland': #2ECC71,
  'peter-river': #3498DB,
  'amethyst': #9B59B6,
  'wet-asphalt': #34495E,
  'green-sea': #16A085,
  'nephritis': #27AE60,
  'belize-hole': #2980B9,
  'wisteria': #8E44AD,
  'midnight-blue': #2C3E50,
  'sunflower': #F1C40F,
  'carrot': #E67E22,
  'alizarin': #E74C3C,
  'clouds': #ECF0F1,
  'concrete': #95A5A6,
  'orange': #F39C12,
  'pumpkin': #D35400,
  'pomegranate': #C0392B,
  'silver': #BDC3C7,
  'asbestos': #7F8C8D
) !default;

$default-shades: (
  '50': -95%,
  '100': -85%,
  '200': -65%,
  '300': -45%,
  '400': -30%,
  '500': -15%,
  '600': 0,
  '700': 15%,
  '800': 30%,
  '900': 55%,
  '950': 75%
) !default;

$additional-colors: () !default;

@mixin generate-shades($name, $base-color, $shades: $default-shades) {
  @each $index, $value in $shades {
    @if $value == 0 {
      --#{$name}: #{$base-color};
      --#{$name}-#{$index}: #{$base-color};
    } @else if meta.type-of($value) == color {
      --#{$name}-#{$index}: #{$value};
    } @else {
      --#{$name}-#{$index}: #{color.scale($base-color, $lightness: $value)};
    }
  }
}

@mixin generate-color-scheme {
  @each $name, $value in $color-scheme {
    @if meta.type-of($value) == map {
      $base-color: map.get($value, 'base-color');
      $shades: map.get($value, 'shades');
      @include generate-shades($name, $base-color, $shades);
    } @else if meta.type-of($value) == color {
      @include generate-shades($name, $value);
    }
  }
  @each $name, $value in $additional-colors {
    --#{$name}: #{$value};
  }
}